/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"src\\app\\layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* cyrillic-ext */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/ec159349637c90ad-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/513657b02c5c193f-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/fd4db3eb5472fc27-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/51ed15f9841b9f9d-s.woff2) format('woff2');
  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
}
/* vietnamese */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/05a31a2ca4975f99-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/d6b16ce4a6175f26-s.woff2) format('woff2');
  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: '__Inter_aaf875';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: '__Inter_Fallback_aaf875';src: local("Arial");ascent-override: 90.49%;descent-override: 22.56%;line-gap-override: 0.00%;size-adjust: 107.06%
}.__className_aaf875 {font-family: '__Inter_aaf875', '__Inter_Fallback_aaf875';font-style: normal
}

/*!*****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[12].use[3]!./src/app/globals.css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************/
/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
    :root {
      --background: hsl(0 0% 100%);
      --foreground: hsl(222.2 84% 4.9%);

      --card: hsl(0 0% 100%);
      --card-foreground: hsl(222.2 84% 4.9%);

      --popover: hsl(0 0% 100%);
      --popover-foreground: hsl(222.2 84% 4.9%);

      --primary: hsl(212 64% 19%);
      --primary-foreground: hsl(210 40% 98%);
      --primary-hover: hsl(212, 58%, 31%);

      --secondary: hsl(213 47% 47%);
      --secondary-foreground: hsl(222.2 47.4% 11.2%);

      --muted: hsl(210 40% 96.1%);
      --muted-foreground: hsl(215.4 16.3% 46.9%);

      --accent: hsl(210 40% 96.1%);
      --accent-foreground: hsl(222.2 47.4% 11.2%);

      --destructive: hsl(0 84.2% 60.2%);
      --destructive-foreground: hsl(210 40% 98%);

      --border: hsl(214.3 31.8% 91.4%);
      --input: hsl(214.3 31.8% 91.4%);
      --ring: hsl(222.2 84% 4.9%);

      --radius: 0.5rem;
    }

    .dark {
      --background: hsl(215 100% 7%);
      --foreground: hsl(210 40% 98%);
      
      --card: hsla(216 73% 13% 0.63);
      /* --card: hsl(222.2 84% 4.9%); */
      --card-foreground: hsl(210 40% 98%);

      --popover: hsl(222.2 84% 4.9%);
      --popover-foreground: hsl(210 40% 98%);

      --primary: hsl(214 68% 32%);
      --primary-foreground: hsl(210 40% 98%);
      --primary-hover: hsl(214 63% 45%);

      --secondary: hsl(214 57% 44%);
      --secondary-foreground: hsl(210 40% 98%);

      --muted: hsl(217.2 32.6% 17.5%);
      --muted-foreground: hsl(215 20.2% 65.1%);

      --accent: hsl(217.2 32.6% 17.5%);
      --accent-foreground: hsl(210 40% 98%);

      --destructive: hsl(0 62.8% 30.6%);
      --destructive-foreground: hsl(210 40% 98%);

      --border: hsl(217.2 32.6% 17.5%);
      --input: hsl(217.2 32.6% 17.5%);
      --ring: hsl(212.7 26.8% 83.9%);
    }
    * {
  border-color: var(--border);
}
    body {
  background-color: var(--background);
  color: var(--foreground);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 500ms;
  animation-duration: 500ms;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
  /* Header */
  .animacao-risco-texto::after {
  position: absolute;
  bottom: 0px;
  display: block;
  height: 2px;
  content: var(--tw-content);
  width: 0px;
}
  .animacao-risco-texto:hover::after {
  content: var(--tw-content);
  width: 100%;
}
  @keyframes scaleToRigth {

  0% {
    content: var(--tw-content);
    transform: scaleX(0);;
    transform-origin: 0% 0%;;
  }

  100% {
    content: var(--tw-content);
    transform: scaleX(1);;
    transform-origin: 0% 0%;;
  }
}
  .animacao-risco-texto:hover::after {
  animation: scaleToRigth 0.3s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
  content: var(--tw-content);
  background-color: var(--secondary);
}
  .sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
  .static {
  position: static;
}
  .fixed {
  position: fixed;
}
  .absolute {
  position: absolute;
}
  .relative {
  position: relative;
}
  .inset-0 {
  inset: 0px;
}
  .inset-x-0 {
  left: 0px;
  right: 0px;
}
  .inset-y-0 {
  top: 0px;
  bottom: 0px;
}
  .-bottom-12 {
  bottom: -3rem;
}
  .-left-12 {
  left: -3rem;
}
  .-right-12 {
  right: -3rem;
}
  .-top-12 {
  top: -3rem;
}
  .bottom-0 {
  bottom: 0px;
}
  .bottom-20 {
  bottom: 5rem;
}
  .left-0 {
  left: 0px;
}
  .left-1\/2 {
  left: 50%;
}
  .left-2 {
  left: 0.5rem;
}
  .left-\[50\%\] {
  left: 50%;
}
  .right-0 {
  right: 0px;
}
  .right-10 {
  right: 2.5rem;
}
  .right-2 {
  right: 0.5rem;
}
  .right-4 {
  right: 1rem;
}
  .top-0 {
  top: 0px;
}
  .top-1\/2 {
  top: 50%;
}
  .top-4 {
  top: 1rem;
}
  .top-\[50\%\] {
  top: 50%;
}
  .z-0 {
  z-index: 0;
}
  .z-10 {
  z-index: 10;
}
  .z-20 {
  z-index: 20;
}
  .z-50 {
  z-index: 50;
}
  .row-span-2 {
  grid-row: span 2 / span 2;
}
  .row-start-2 {
  grid-row-start: 2;
}
  .-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}
  .mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
  .my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
  .my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
  .-ml-4 {
  margin-left: -1rem;
}
  .-mt-4 {
  margin-top: -1rem;
}
  .mb-1 {
  margin-bottom: 0.25rem;
}
  .mb-10 {
  margin-bottom: 2.5rem;
}
  .ml-\[6px\] {
  margin-left: 6px;
}
  .ml-auto {
  margin-left: auto;
}
  .mt-1 {
  margin-top: 0.25rem;
}
  .mt-10 {
  margin-top: 2.5rem;
}
  .mt-2 {
  margin-top: 0.5rem;
}
  .mt-8 {
  margin-top: 2rem;
}
  .flex {
  display: flex;
}
  .inline-flex {
  display: inline-flex;
}
  .grid {
  display: grid;
}
  .hidden {
  display: none;
}
  .h-10 {
  height: 2.5rem;
}
  .h-12 {
  height: 3rem;
}
  .h-3 {
  height: 0.75rem;
}
  .h-3\.5 {
  height: 0.875rem;
}
  .h-4 {
  height: 1rem;
}
  .h-6 {
  height: 1.5rem;
}
  .h-64 {
  height: 16rem;
}
  .h-7 {
  height: 1.75rem;
}
  .h-8 {
  height: 2rem;
}
  .h-9 {
  height: 2.25rem;
}
  .h-\[10\.5rem\] {
  height: 10.5rem;
}
  .h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
  .h-fit {
  height: fit-content;
}
  .h-full {
  height: 100%;
}
  .h-min {
  height: min-content;
}
  .h-px {
  height: 1px;
}
  .max-h-96 {
  max-height: 24rem;
}
  .max-h-\[22rem\] {
  max-height: 22rem;
}
  .min-h-screen {
  min-height: 100vh;
}
  .w-1 {
  width: 0.25rem;
}
  .w-1\.5 {
  width: 0.375rem;
}
  .w-12 {
  width: 3rem;
}
  .w-20 {
  width: 5rem;
}
  .w-3 {
  width: 0.75rem;
}
  .w-3\.5 {
  width: 0.875rem;
}
  .w-3\/4 {
  width: 75%;
}
  .w-3\/5 {
  width: 60%;
}
  .w-4 {
  width: 1rem;
}
  .w-6 {
  width: 1.5rem;
}
  .w-64 {
  width: 16rem;
}
  .w-7 {
  width: 1.75rem;
}
  .w-8 {
  width: 2rem;
}
  .w-9 {
  width: 2.25rem;
}
  .w-fit {
  width: fit-content;
}
  .w-full {
  width: 100%;
}
  .min-w-0 {
  min-width: 0px;
}
  .min-w-\[8rem\] {
  min-width: 8rem;
}
  .min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
  .min-w-fit {
  min-width: fit-content;
}
  .max-w-4xl {
  max-width: 56rem;
}
  .max-w-5xl {
  max-width: 64rem;
}
  .max-w-7xl {
  max-width: 80rem;
}
  .max-w-\[14rem\] {
  max-width: 14rem;
}
  .max-w-\[20rem\] {
  max-width: 20rem;
}
  .max-w-\[30rem\] {
  max-width: 30rem;
}
  .max-w-\[60rem\] {
  max-width: 60rem;
}
  .max-w-\[70rem\] {
  max-width: 70rem;
}
  .max-w-\[86rem\] {
  max-width: 86rem;
}
  .max-w-lg {
  max-width: 32rem;
}
  .shrink-0 {
  flex-shrink: 0;
}
  .grow-0 {
  flex-grow: 0;
}
  .basis-full {
  flex-basis: 100%;
}
  .-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  .rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
  @keyframes slideOutBottom {

  0% {
    transform: translateY(0);
    opacity: 1;
  }

  100% {
    transform: translateY(15px);
    opacity: 0;
  }
}
  .animate-slideOutTheme {
  animation: slideOutBottom 0.3s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
}
  @keyframes slideInTop {

  0% {
    transform: translateY(-15px);
    opacity: 0;
  }

  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}
  .animate-slideinTheme {
  animation: slideInTop 0.3s 0.3s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
}
  .cursor-default {
  cursor: default;
}
  .cursor-pointer {
  cursor: pointer;
}
  .select-none {
  user-select: none;
}
  .list-disc {
  list-style-type: disc;
}
  .grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
  .grid-rows-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr));
}
  .grid-rows-\[auto_auto_auto\] {
  grid-template-rows: auto auto auto;
}
  .flex-col {
  flex-direction: column;
}
  .flex-col-reverse {
  flex-direction: column-reverse;
}
  .flex-wrap {
  flex-wrap: wrap;
}
  .items-start {
  align-items: flex-start;
}
  .items-end {
  align-items: flex-end;
}
  .items-center {
  align-items: center;
}
  .justify-start {
  justify-content: flex-start;
}
  .justify-center {
  justify-content: center;
}
  .justify-between {
  justify-content: space-between;
}
  .justify-evenly {
  justify-content: space-evenly;
}
  .gap-1 {
  gap: 0.25rem;
}
  .gap-14 {
  gap: 3.5rem;
}
  .gap-2 {
  gap: 0.5rem;
}
  .gap-3 {
  gap: 0.75rem;
}
  .gap-4 {
  gap: 1rem;
}
  .gap-5 {
  gap: 1.25rem;
}
  .gap-6 {
  gap: 1.5rem;
}
  .gap-7 {
  gap: 1.75rem;
}
  .gap-x-5 {
  column-gap: 1.25rem;
}
  .gap-y-5 {
  row-gap: 1.25rem;
}
  .space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
  .space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
  .space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}
  .space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}
  .space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
  .space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
  .self-start {
  align-self: flex-start;
}
  .self-center {
  align-self: center;
}
  .overflow-hidden {
  overflow: hidden;
}
  .overflow-x-hidden {
  overflow-x: hidden;
}
  .whitespace-nowrap {
  white-space: nowrap;
}
  .rounded-full {
  border-radius: 9999px;
}
  .rounded-lg {
  border-radius: var(--radius);
}
  .rounded-md {
  border-radius: calc(var(--radius) - 2px);
}
  .rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}
  .rounded-xl {
  border-radius: 0.75rem;
}
  .border {
  border-width: 1px;
}
  .border-2 {
  border-width: 2px;
}
  .border-4 {
  border-width: 4px;
}
  .border-b {
  border-bottom-width: 1px;
}
  .border-l {
  border-left-width: 1px;
}
  .border-r {
  border-right-width: 1px;
}
  .border-t {
  border-top-width: 1px;
}
  .border-input {
  border-color: var(--input);
}
  .border-primary {
  border-color: var(--primary);
}
  .bg-background {
  background-color: var(--background);
}
  .bg-black\/10 {
  background-color: rgb(0 0 0 / 0.1);
}
  .bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}
  .bg-card {
  background-color: var(--card);
}
  .bg-destructive {
  background-color: var(--destructive);
}
  .bg-muted {
  background-color: var(--muted);
}
  .bg-popover {
  background-color: var(--popover);
}
  .bg-primary {
  background-color: var(--primary);
}
  .bg-secondary {
  background-color: var(--secondary);
}
  .bg-transparent {
  background-color: transparent;
}
  .bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
  .fill-current {
  fill: currentColor;
}
  .object-cover {
  object-fit: cover;
}
  .p-1 {
  padding: 0.25rem;
}
  .p-1\.5 {
  padding: 0.375rem;
}
  .p-6 {
  padding: 1.5rem;
}
  .px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}
  .px-14 {
  padding-left: 3.5rem;
  padding-right: 3.5rem;
}
  .px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
  .px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
  .px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
  .px-7 {
  padding-left: 1.75rem;
  padding-right: 1.75rem;
}
  .px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
  .py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
  .py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
  .py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
  .py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
  .py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
  .py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}
  .py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
  .py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
  .pl-2 {
  padding-left: 0.5rem;
}
  .pl-4 {
  padding-left: 1rem;
}
  .pl-8 {
  padding-left: 2rem;
}
  .pr-2 {
  padding-right: 0.5rem;
}
  .pr-8 {
  padding-right: 2rem;
}
  .pt-0 {
  padding-top: 0px;
}
  .pt-4 {
  padding-top: 1rem;
}
  .pt-5 {
  padding-top: 1.25rem;
}
  .text-center {
  text-align: center;
}
  .text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
  .text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
  .text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
  .text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
  .text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
  .font-bold {
  font-weight: 700;
}
  .font-medium {
  font-weight: 500;
}
  .font-semibold {
  font-weight: 600;
}
  .leading-none {
  line-height: 1;
}
  .tracking-tight {
  letter-spacing: -0.025em;
}
  .tracking-widest {
  letter-spacing: 0.1em;
}
  .text-card-foreground {
  color: var(--card-foreground);
}
  .text-destructive {
  color: var(--destructive);
}
  .text-destructive-foreground {
  color: var(--destructive-foreground);
}
  .text-foreground {
  color: var(--foreground);
}
  .text-gray-200 {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}
  .text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
  .text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
  .text-muted-foreground {
  color: var(--muted-foreground);
}
  .text-popover-foreground {
  color: var(--popover-foreground);
}
  .text-primary {
  color: var(--primary);
}
  .text-primary-foreground {
  color: var(--primary-foreground);
}
  .text-secondary-foreground {
  color: var(--secondary-foreground);
}
  .text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
  .underline-offset-4 {
  text-underline-offset: 4px;
}
  .opacity-0 {
  opacity: 0;
}
  .opacity-100 {
  opacity: 1;
}
  .opacity-40 {
  opacity: 0.4;
}
  .opacity-50 {
  opacity: 0.5;
}
  .opacity-60 {
  opacity: 0.6;
}
  .opacity-70 {
  opacity: 0.7;
}
  .shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
  .shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
  .shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
  .shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
  .outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
  .outline {
  outline-style: solid;
}
  .ring-offset-background {
  --tw-ring-offset-color: var(--background);
}
  .transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
  .transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
  .transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
  .duration-200 {
  transition-duration: 200ms;
}
  .duration-500 {
  transition-duration: 500ms;
}
  .ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
  @keyframes enter {

  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
  @keyframes exit {

  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
  .duration-200 {
  animation-duration: 200ms;
}
  .duration-500 {
  animation-duration: 500ms;
}
  .ease-in-out {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

  .placeholder\:text-muted-foreground::placeholder {
  color: var(--muted-foreground);
}

  .before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

  .before\:bottom-8::before {
  content: var(--tw-content);
  bottom: 2rem;
}

  .before\:rounded-md::before {
  content: var(--tw-content);
  border-radius: calc(var(--radius) - 2px);
}

  .before\:bg-primary::before {
  content: var(--tw-content);
  background-color: var(--primary);
}

  .before\:px-2::before {
  content: var(--tw-content);
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

  .before\:py-0::before {
  content: var(--tw-content);
  padding-top: 0px;
  padding-bottom: 0px;
}

  .before\:py-0\.5::before {
  content: var(--tw-content);
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

  .before\:text-center::before {
  content: var(--tw-content);
  text-align: center;
}

  .before\:text-sm::before {
  content: var(--tw-content);
  font-size: 0.875rem;
  line-height: 1.25rem;
}

  .before\:font-medium::before {
  content: var(--tw-content);
  font-weight: 500;
}

  .before\:text-white::before {
  content: var(--tw-content);
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

  .before\:opacity-0::before {
  content: var(--tw-content);
  opacity: 0;
}

  .before\:transition::before {
  content: var(--tw-content);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

  .before\:duration-500::before {
  content: var(--tw-content);
  transition-duration: 500ms;
}

  .before\:content-\[\'Angular\'\]::before {
  --tw-content: 'Angular';
  content: var(--tw-content);
}

  .before\:content-\[\'Git\'\]::before {
  --tw-content: 'Git';
  content: var(--tw-content);
}

  .before\:content-\[\'Java\'\]::before {
  --tw-content: 'Java';
  content: var(--tw-content);
}

  .before\:content-\[\'JavaScript\'\]::before {
  --tw-content: 'JavaScript';
  content: var(--tw-content);
}

  .before\:content-\[\'NextJs\'\]::before {
  --tw-content: 'NextJs';
  content: var(--tw-content);
}

  .before\:content-\[\'React\'\]::before {
  --tw-content: 'React';
  content: var(--tw-content);
}

  .before\:content-\[\'Tailwind\'\]::before {
  --tw-content: 'Tailwind';
  content: var(--tw-content);
}

  .before\:content-\[\'Typescript\'\]::before {
  --tw-content: 'Typescript';
  content: var(--tw-content);
}

  .before\:duration-500::before {
  content: var(--tw-content);
  animation-duration: 500ms;
}

  .hover\:scale-\[1\.02\]:hover {
  --tw-scale-x: 1.02;
  --tw-scale-y: 1.02;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .hover\:cursor-pointer:hover {
  cursor: pointer;
}

  .hover\:bg-accent:hover {
  background-color: var(--accent);
}

  .hover\:bg-primary-hover:hover {
  background-color: var(--primary-hover);
}

  .hover\:text-accent-foreground:hover {
  color: var(--accent-foreground);
}

  .hover\:text-secondary:hover {
  color: var(--secondary);
}

  .hover\:underline:hover {
  text-decoration-line: underline;
}

  .hover\:opacity-100:hover {
  opacity: 1;
}

  .hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

  .hover\:shadow-\[\#0056b880\]:hover {
  --tw-shadow-color: #0056b880;
  --tw-shadow: var(--tw-shadow-colored);
}

  .hover\:before\:flex:hover::before {
  content: var(--tw-content);
  display: flex;
}

  .hover\:before\:-translate-y-6:hover::before {
  content: var(--tw-content);
  --tw-translate-y: -1.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .hover\:before\:opacity-100:hover::before {
  content: var(--tw-content);
  opacity: 1;
}

  .focus\:bg-accent:focus {
  background-color: var(--accent);
}

  .focus\:text-accent-foreground:focus {
  color: var(--accent-foreground);
}

  .focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

  .focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

  .focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

  .focus\:ring-ring:focus {
  --tw-ring-color: var(--ring);
}

  .focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

  .focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

  .focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

  .focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: var(--ring);
}

  .disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

  .disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

  .disabled\:opacity-50:disabled {
  opacity: 0.5;
}

  .peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

  .peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
  pointer-events: none;
}

  .data-\[side\=bottom\]\:translate-y-1[data-side=bottom] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .data-\[side\=left\]\:-translate-x-1[data-side=left] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .data-\[side\=right\]\:translate-x-1[data-side=right] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .data-\[side\=top\]\:-translate-y-1[data-side=top] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .data-\[state\=open\]\:bg-accent[data-state=open] {
  background-color: var(--accent);
}

  .data-\[state\=open\]\:bg-secondary[data-state=open] {
  background-color: var(--secondary);
}

  .data-\[state\=open\]\:text-muted-foreground[data-state=open] {
  color: var(--muted-foreground);
}

  .data-\[disabled\]\:opacity-50[data-disabled] {
  opacity: 0.5;
}

  .data-\[state\=closed\]\:duration-300[data-state=closed] {
  transition-duration: 300ms;
}

  .data-\[state\=open\]\:duration-500[data-state=open] {
  transition-duration: 500ms;
}

  .data-\[state\=open\]\:animate-in[data-state=open] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

  .data-\[state\=closed\]\:animate-out[data-state=closed] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

  .data-\[state\=closed\]\:fade-out-0[data-state=closed] {
  --tw-exit-opacity: 0;
}

  .data-\[state\=open\]\:fade-in-0[data-state=open] {
  --tw-enter-opacity: 0;
}

  .data-\[state\=closed\]\:zoom-out-95[data-state=closed] {
  --tw-exit-scale: .95;
}

  .data-\[state\=open\]\:zoom-in-95[data-state=open] {
  --tw-enter-scale: .95;
}

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side=bottom] {
  --tw-enter-translate-y: -0.5rem;
}

  .data-\[side\=left\]\:slide-in-from-right-2[data-side=left] {
  --tw-enter-translate-x: 0.5rem;
}

  .data-\[side\=right\]\:slide-in-from-left-2[data-side=right] {
  --tw-enter-translate-x: -0.5rem;
}

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side=top] {
  --tw-enter-translate-y: 0.5rem;
}

  .data-\[state\=closed\]\:slide-out-to-bottom[data-state=closed] {
  --tw-exit-translate-y: 100%;
}

  .data-\[state\=closed\]\:slide-out-to-left[data-state=closed] {
  --tw-exit-translate-x: -100%;
}

  .data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state=closed] {
  --tw-exit-translate-x: -50%;
}

  .data-\[state\=closed\]\:slide-out-to-right[data-state=closed] {
  --tw-exit-translate-x: 100%;
}

  .data-\[state\=closed\]\:slide-out-to-top[data-state=closed] {
  --tw-exit-translate-y: -100%;
}

  .data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state=closed] {
  --tw-exit-translate-y: -48%;
}

  .data-\[state\=open\]\:slide-in-from-bottom[data-state=open] {
  --tw-enter-translate-y: 100%;
}

  .data-\[state\=open\]\:slide-in-from-left[data-state=open] {
  --tw-enter-translate-x: -100%;
}

  .data-\[state\=open\]\:slide-in-from-left-1\/2[data-state=open] {
  --tw-enter-translate-x: -50%;
}

  .data-\[state\=open\]\:slide-in-from-right[data-state=open] {
  --tw-enter-translate-x: 100%;
}

  .data-\[state\=open\]\:slide-in-from-top[data-state=open] {
  --tw-enter-translate-y: -100%;
}

  .data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state=open] {
  --tw-enter-translate-y: -48%;
}

  .data-\[state\=closed\]\:duration-300[data-state=closed] {
  animation-duration: 300ms;
}

  .data-\[state\=open\]\:duration-500[data-state=open] {
  animation-duration: 500ms;
}

  .dark\:z-0:is(.dark *) {
  z-index: 0;
}

  .dark\:z-20:is(.dark *) {
  z-index: 20;
}

  .dark\:border-4:is(.dark *) {
  border-width: 4px;
}

  .dark\:border-destructive:is(.dark *) {
  border-color: var(--destructive);
}

  .dark\:border-secondary:is(.dark *) {
  border-color: var(--secondary);
}

  .dark\:bg-\[\#112e4f\]:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 46 79 / var(--tw-bg-opacity));
}

  .dark\:bg-background:is(.dark *) {
  background-color: var(--background);
}

  .dark\:bg-black\/40:is(.dark *) {
  background-color: rgb(0 0 0 / 0.4);
}

  .dark\:text-gray-100:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity));
}

  .dark\:text-gray-200:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

  .dark\:text-gray-300:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

  .dark\:text-white:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

  .dark\:decoration-white:is(.dark *) {
  text-decoration-color: #fff;
}

  .dark\:opacity-0:is(.dark *) {
  opacity: 0;
}

  .dark\:opacity-100:is(.dark *) {
  opacity: 1;
}

  .dark\:shadow-lg:is(.dark *) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

  .dark\:hover\:text-secondary:hover:is(.dark *) {
  color: var(--secondary);
}

  .dark\:hover\:shadow-\[\#0077ff77\]:hover:is(.dark *) {
  --tw-shadow-color: #0077ff77;
  --tw-shadow: var(--tw-shadow-colored);
}

  @media (min-width: 640px) {

  .sm\:mt-0 {
    margin-top: 0px;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:max-w-sm {
    max-width: 24rem;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:justify-end {
    justify-content: flex-end;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .sm\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }

  .sm\:px-16 {
    padding-left: 4rem;
    padding-right: 4rem;
  }

  .sm\:px-24 {
    padding-left: 6rem;
    padding-right: 6rem;
  }

  .sm\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .sm\:text-left {
    text-align: left;
  }

  .sm\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}

  @media (min-width: 768px) {

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-6 {
    height: 1.5rem;
  }

  .md\:h-7 {
    height: 1.75rem;
  }

  .md\:w-6 {
    width: 1.5rem;
  }

  .md\:w-7 {
    width: 1.75rem;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-start {
    align-items: flex-start;
  }

  .md\:gap-3 {
    gap: 0.75rem;
  }
}

  @media (min-width: 1024px) {

  .lg\:block {
    display: block;
  }

  .lg\:h-full {
    height: 100%;
  }

  .lg\:w-full {
    width: 100%;
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:grid-cols-\[1fr_auto\] {
    grid-template-columns: 1fr auto;
  }

  .lg\:grid-rows-\[auto\] {
    grid-template-rows: auto;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:gap-y-0 {
    row-gap: 0px;
  }

  .lg\:px-20 {
    padding-left: 5rem;
    padding-right: 5rem;
  }

  .lg\:px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
}

  .\[\&\>span\]\:line-clamp-1>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

  .\[\&\>svg\+div\]\:translate-y-\[-3px\]>svg+div {
  --tw-translate-y: -3px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .\[\&\>svg\]\:absolute>svg {
  position: absolute;
}

  .\[\&\>svg\]\:left-4>svg {
  left: 1rem;
}

  .\[\&\>svg\]\:top-4>svg {
  top: 1rem;
}

  .\[\&\>svg\]\:text-destructive>svg {
  color: var(--destructive);
}

  .\[\&\>svg\]\:text-foreground>svg {
  color: var(--foreground);
}

  .\[\&\>svg\~\*\]\:pl-7>svg~* {
  padding-left: 1.75rem;
}

  .\[\&_p\]\:leading-relaxed p {
  line-height: 1.625;
}
